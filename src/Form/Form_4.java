/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Form;

import com.mysql.cj.protocol.Resultset;
import java.awt.Container;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author ACER
 */
public class Form_4 extends javax.swing.JPanel {
    
    
    private Form_5 f5;
    private Form_6 f6;
   
    Connection con = null;
    ResultSet rs = null;
    Statement stmt = null;
    
    /**
     * Creates new form Form_4
     */
    public Form_4() {
        initComponents();
        f5 = new Form_5();
        f6 = new Form_6();
        populateTableComboBox();
    }

    
    private void populateTableComboBox() {
      try {
            // Clear existing items
            cboTable.removeAllItems();
            cboTable.addItem("SELECT");
            
            // Establish database connection
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = DriverManager.getConnection(
                "jdbc:mysql://localhost:3306/repairdb?useSSL=false", 
                "root", 
                "1111"
            );
            
            // Predefined tables for repairdb
            String[] allowedTables = {
                "Customer", 
                "tv_products_and_services", 
                "admin"
            };
            
            // Add allowed tables to combo box
            for (String tableName : allowedTables) {
                cboTable.addItem(tableName);
            }
            
            // Close connection
            con.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error loading tables: " + e.getMessage());
        }
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblUpdate = new javax.swing.JTable();
        cboTable = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnADD = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnConfirm = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 153, 153));

        tblUpdate.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 18)); // NOI18N
        tblUpdate.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblUpdate);

        cboTable.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 20)); // NOI18N
        cboTable.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SELECT" }));
        cboTable.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboTableItemStateChanged(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 20)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("SELECT TABLE ");

        jLabel2.setFont(new java.awt.Font("Century", 0, 28)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("DATA TABLE MODIFY");

        btnADD.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 20)); // NOI18N
        btnADD.setText("ADD");
        btnADD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnADDActionPerformed(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 20)); // NOI18N
        btnUpdate.setText("UPDATE");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 20)); // NOI18N
        btnDelete.setText("DELETE");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnConfirm.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 20)); // NOI18N
        btnConfirm.setText("CONFIRM");
        btnConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmActionPerformed(evt);
            }
        });

        btnBack.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 20)); // NOI18N
        btnBack.setText("BACK");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(734, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(26, 26, 26)
                .addComponent(cboTable, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnConfirm)
                .addGap(43, 43, 43))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(491, 491, 491))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(245, 245, 245)
                        .addComponent(btnADD)
                        .addGap(258, 258, 258)
                        .addComponent(btnUpdate)
                        .addGap(201, 201, 201)
                        .addComponent(btnDelete))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(btnBack))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(126, 126, 126)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1081, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel2)
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(btnConfirm))
                .addGap(42, 42, 42)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(68, 68, 68)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete)
                    .addComponent(btnADD))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addComponent(btnBack)
                .addGap(33, 33, 33))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cboTableItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboTableItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == java.awt.event.ItemEvent.SELECTED) {
            if (!cboTable.getSelectedItem().equals("SELECT")) {
                displayData();
            }
        }
    }//GEN-LAST:event_cboTableItemStateChanged

    private void displayData() {
        try {
            // Check if a table is selected
            if (cboTable.getSelectedItem() == null || 
                cboTable.getSelectedItem().equals("SELECT")) {
                return;
            }
            
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection(
                "jdbc:mysql://localhost:3306/repairdb?useSSL=false", 
                "root", 
                "1111"
            );
            
            String selectedTable = cboTable.getSelectedItem().toString();
            
            // Fetch data for the selected table
            String sql = "SELECT * FROM `" + selectedTable + "`";
            PreparedStatement pstmt = con.prepareStatement(sql);
            ResultSet rs = pstmt.executeQuery();
            
            // Use DbUtils to convert ResultSet to TableModel
            tblUpdate.setModel(DbUtils.resultSetToTableModel(rs));
            
            // Close resources
            rs.close();
            pstmt.close();
            con.close();
        
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, 
                "Error displaying data: " + e.getMessage(), 
                "Data Fetch Error", 
                JOptionPane.ERROR_MESSAGE
            );
        }
    }
    
    private void btnADDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnADDActionPerformed
        // TODO add your handling code here:
         try {
            // Get parent container (JFrame or JPanel)
            Container parent = this.getParent();
            
            // Remove current panel
            parent.remove(this);
            
            // Add new panel
            parent.add(f5);
            
            // Refresh the container
            parent.revalidate();
            parent.repaint();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, 
                "Error switching panel: " + e.getMessage(), 
                "Panel Switch Error", 
                JOptionPane.ERROR_MESSAGE
            );
        }
    }//GEN-LAST:event_btnADDActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        try {
            // Get parent container (JFrame or JPanel)
            Container parent = this.getParent();
            
            // Remove current panel
            parent.remove(this);
            
            // Add new panel
            parent.add(f6);
            
            // Refresh the container
            parent.revalidate();
            parent.repaint();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, 
                "Error switching panel: " + e.getMessage(), 
                "Panel Switch Error", 
                JOptionPane.ERROR_MESSAGE
            );
        }
            
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
         try {
        // Get parent container (JFrame or JPanel)
        Container parent = this.getParent();
        
        // Remove current panel
        parent.remove(this);
        
        // Add new panel (assuming Form_6 is your delete form)
        parent.add(f6);
        
        // Refresh the container
        parent.revalidate();
        parent.repaint();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, 
            "Error switching panel: " + e.getMessage(), 
            "Panel Switch Error", 
            JOptionPane.ERROR_MESSAGE
        );
    }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmActionPerformed
        // TODO add your handling code here:
         displayData();
    }//GEN-LAST:event_btnConfirmActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
       try {
        // Get parent container
        Container parent = this.getParent();
        
        // Remove current panel
        parent.remove(this);
        
        // Add back the main panel (Form_Home)
        Form_Home mainPanel = new Form_Home();
        parent.add(mainPanel);
        
        // Refresh the container
        parent.revalidate();
        parent.repaint();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, 
            "Error returning to main panel: " + e.getMessage(), 
            "Navigation Error", 
            JOptionPane.ERROR_MESSAGE
        );
    }
    }//GEN-LAST:event_btnBackActionPerformed

                                             


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnADD;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnConfirm;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox cboTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblUpdate;
    // End of variables declaration//GEN-END:variables
}
